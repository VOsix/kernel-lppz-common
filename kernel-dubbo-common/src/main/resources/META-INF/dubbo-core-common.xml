<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
	
    <dubbo:application name="${dubbo.application.name}" owner="${dubbo.application.owner:dubbox}" organization="${dubbo.application.organization:dubbox}"/>
	
	<dubbo:registry address="${dubbo.registry.address}" />

    <dubbo:annotation package="${dubbo.annotation.package}"/>
    <!--uncomment this if you want to test dubbo's monitor-->
    <dubbo:monitor protocol="registry"/>
	<dubbo:consumer check="false" />
	<dubbo:protocol name="dubbo" serialization="${dubbo.serialization:kryo}" port="${dubbo.dubbo.port:20880}" dispatcher="all" threadpool="fixed" threads="${dubbo.dubbo.threads:200}" queues="${dubbo.dubbo.queues:1000}"/>
    <!--<dubbo:protocol name="dubbo" serialization="fst" optimizer="com.alibaba.dubbo.demo.SerializationOptimizerImpl"/>-->

    <!--<dubbo:protocol name="dubbo" serialization="nativejava"/>-->
    <!--<dubbo:protocol name="dubbo" serialization="hessian2"/>-->
    <!--<dubbo:protocol name="dubbo" serialization="fastjson"/>-->
    <!--<dubbo:protocol name="dubbo" serialization="dubbo"/>-->


    <!--TODO according to the spring convention, we should use something like keep-alive-->
    <!-- use netty server -->
    <!--<dubbo:protocol name="rest" port="8888" keepalive="true" server="netty" iothreads="5" threads="100" contextpath="services"/>-->

    <!-- use tjws server -->
    <!--<dubbo:protocol name="rest" port="8888" server="tjws" contextpath="services"/>-->

    <!-- use tomcat server 
    <dubbo:protocol name="rest" port="8888" threads="500" contextpath="services" server="tomcat" accepts="500"
                    extension="com.alibaba.dubbo.demo.extension.TraceInterceptor,
                    com.alibaba.dubbo.demo.extension.TraceFilter,
                    com.alibaba.dubbo.demo.extension.ClientTraceFilter,
                    com.alibaba.dubbo.demo.extension.DynamicTraceBinding,
                    com.alibaba.dubbo.demo.extension.CustomExceptionMapper,
                    com.alibaba.dubbo.rpc.protocol.rest.support.LoggingFilter"/>-->
    <!-- use the external tomcat or other server with the servlet approach; the port and contextpath must be exactly the same as those in external server -->
 <!--    <dubbo:protocol name="rest" port="${dubbo.rest.port}" contextpath="services" server="servlet" extension="com.lppz.dubbox.rest.AuthRequestFilter,com.lppz.dubbox.rest.LppzLoggingFilter" /> -->
<!--     <dubbo:protocol name="http" port="8889"/> -->
<!--     <dubbo:protocol name="hessian" port="8890"/> -->
    <!-- <dubbo:protocol name="webservice" port="28990" contextpath="webservices" server="tomcat"/> -->
    <!-- <dubbo:reference id="bidService" interface="com.alibaba.dubbo.demo.bid.BidService"/> 
    <dubbo:reference id="anotherUserRestService" interface="com.alibaba.dubbo.demo.user.facade.AnotherUserRestService" loadbalance="roundrobin"/>-->

    <!-- directly connect to provider to simulate the access to non-dubbo rest services -->
    <!--<dubbo:reference id="anotherUserRestService" interface="com.alibaba.dubbo.demo.user.facade.AnotherUserRestService" url="rest://localhost:8888/services/"/>-->

<!-- 	<dubbo:service interface="com.alibaba.dubbo.demo.bid.BidService" ref="bidService"  protocol="dubbo"/> -->

<!--     we add the group property since there's another annotation-configured service impl: com.alibaba.dubbo.demo.user.facade.AnnotationDrivenUserRestServiceImpl -->
<!--     <dubbo:service interface="com.alibaba.dubbo.demo.user.UserService" ref="userService"  protocol="dubbo" group="xmlConfig"/> -->

<!-- 	<dubbo:service interface="com.alibaba.dubbo.demo.user.facade.UserRestService" ref="userRestService"  protocol="rest" validation="true"/> -->
<!-- 	<dubbo:service interface="com.alibaba.dubbo.demo.user.facade.AnotherUserRestService" ref="anotherUserRestService"  protocol="rest"  timeout="2000" connections="100" validation="true"/> -->

<!--     <bean id="bidService" class="com.alibaba.dubbo.demo.bid.BidServiceImpl" /> -->

<!--     <bean id="userService" class="com.alibaba.dubbo.demo.user.UserServiceImpl" /> -->

<!--     <bean id="userRestService" class="com.alibaba.dubbo.demo.user.facade.UserRestServiceImpl"> -->
<!--         <property name="userService" ref="userService"/> -->
<!--     </bean> -->

<!--     <bean id="anotherUserRestService" class="com.alibaba.dubbo.demo.user.facade.AnotherUserRestServiceImpl"> -->
<!--         <property name="userService" ref="userService"/> -->
<!--     </bean> -->
</beans>